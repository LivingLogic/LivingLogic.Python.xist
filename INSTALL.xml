<?xml version='1.0' encoding='iso-8859-1'?>
<section><title>Requirements</title>
<par>To use &xist; you need the following software packages:</par>
<olist>
<item>Python 2.3 (available from <link href="http://www.python.org/">http://www.python.org/</link>),</item>
<item>The Python &xml; package (available from <link href="http://pyxml.sf.net/">http://pyxml.sf.net/</link>)
(at least version 0.8.2),</item>
<item>URL (available from <link href="root:url/index.html">http://www.livinglogic.de/Python/url/</link>),</item>
<item>ANSIStyle (available from <link href="root:ansistyle/index.html">http://www.livinglogic.de/Python/ansistyle/</link>),</item>
<item>if you want to use automatic image size calculation: the Python Imaging Library (available from
<link href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</link>)</item>
<item>if you want to parse broken HTML: the eGenix mx experimental package (available from
<link href="http://www.egenix.com/files/python/eGenix-mx-Extensions.html">http://www.egenix.com/files/python/eGenix-mx-Extensions.html</link>).</item>
<item>and a C compiler supported by <app>distutils</app>, if you want
to install the source distribution.</item>
</olist>
</section>

<section><title>Installation</title>
<par>&xist; uses <app>distutils</app>, so installation is rather simple. Execute the following command:</par>
<prog>
python setup.py install
</prog>
<par>This will copy <filename>*.py</filename> files, compile *.c files and install everything
in the <dirname>site-packages</dirname>
directory as the <module>ll.xist</module> package.</par>

<par>If you're updating from a version older than 1.5, remove
the old package <module>xist</module> from your installation directory
and remove the <dirname>build</dirname> directory (if you're building from
<app>&cvs;</app>).</par>

<par>If you're updating from a version older than 1.4, remove
the old module <module>xist.url</module> as this is no longer needed
and might collide with the new global module <module>url</module>.</par>

<par>For Windows a binary distribution is provided. To install it,
double click it, and follow the instructions.</par>

<par>If you have difficulties installing this software, send a problem report
to Walter Dörwald (<email>walter@livinglogic.de</email>).</par>
</section>

<section><title>Character encoding</title>
<par>When you pass an 8bit string in the constructor
of an &xist; element, these strings have to
be converted to Unicode. &xist; assumes that these 8bit strings
are in the system default encoding, which normally is &ascii;.
If you want to change this you can put a script
named <filename>sitecustomize.py</filename> somewhere
in the Python path, with the following content:</par>
<prog>
import sys
sys.setdefaultencoding(<rep>"iso-8859-1"</rep>)
</prog>
<par>(or any other encoding name that you want to use
instead of <rep>"iso-8859-1"</rep>).</par>
<par>Starting with Python 2.3 you should use define your
source code encoding it the first or second line (see
<link href="http://www.python.org/peps/pep-0263.html">PEP 263</link>)
and use Unicode string constants only.</par>
</section>

<section><title>Display hook</title>
<par>Currently &xist; nodes do not have a fancy <method>__repr__</method>
method implemented, but the <method>repr</method> method
can be used to generate several different display formats (this is
extensible by implementing new presentation classes). To use e.g.
the <class>TreePresenter</class> format in object dumps in
an interactive Python session you can use the displayhook
feature of Python 2.1, simply by putting the following code
into your Python startup script:</par>
<prog>
import sys, pprint
from ll.xist import xsc, presenters

def displayhook(object):
	if object is not None:
		if isinstance(object, xsc.Node):
			print object.repr(presenters.TreePresenter())
		else:
			pprint.pprint(object)

sys.displayhook = displayhook
</prog>
</section>

<section><title>Syntax highlighting</title>
<par>If you want syntax highlighting in your &xist; tree
dumps and have an &ansi; color capable terminal,
set the environment variable <lit>XSC_REPRANSI</lit>
to <lit>1</lit> or <lit>2</lit> depending on whether
you have a light or dark background color. Setting <lit>XSC_REPRANSI</lit>
to <lit>0</lit> turns off syntax highlighting.</par>
</section>
