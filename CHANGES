New in 0.5
----------
New module for WML 1.3.

The publishing interface has changed internally
and publishing should be faster now:

Publishers now support a new parameter:
usePrefix, which specifies if namespace prefixes
should be output for the element names.

Part of the implementation of the publishing
stuff has been moved to C, so now you'll need
a C compiler to install XIST.

When publishing ", it will now only be replaced with
&quot; inside attributes.

All the asHTML methods now have an additional argument
mode which defaults to None. This makes it possible
to implement different processing modes for new
elements. All currently implemented elements and
entities ignore this argument, but pass it on
in the call to their childrens' asHTML method.

There is now a tools dtd2xsc.py in the tools directory
that creates a skeleton XIST module for a dtd
(this requires xmlproc from the PyXML package).

New preliminary module for DocBook 4.12.
(Incomplete: asHTML methods and Unicode character
entities are missing)

New in 0.4.7
------------
Fixed a bug in the entity handling.

Added a few deprecated elements and attributes to
the html module.

Improved the publishing of attributes. Now all attribute
values will be published. For boolean attributes no value
will be published for XHTML==0 and the attribute name will
be used for XHTML==1 or XHTML==2.

Element.compact now works (better) ;).

Incorparated many bug fixes from Hartmut Goebel.

Implemented xsc.Element.copyDefaultAttrs, which copies
unset attributes over from a dictionary (simplifies
implementing specials.plaintable and specials.plainbody)

providers.Provider.pushNamespace() now handles multiple
arguments with may be Namespace objects or modules
(in which case, the module.namespace will be pushed)

providers.Providers.popNamespace() can now pop multiple
namespaces at once.

providers.TidyURIProvider now uses os.popen3 for
piping the file through tidy, so now there will be
no more temporary files. The call to tidy now includes
options that hopefully make the output more suited to
XIST.

Incorparated a new url.py by Hartmut Goebel, that fixes
many problem (e.g. optimizing
http://server/foo/bar/../../baz.gif
now works.)

make.py includes a new option --path for adding directories
to sys.path.


New in 0.4.6
------------
Now uses sgmlop.XMLParser instead of sgmlop.SGMLParser,
so case is preserved.

Fixed another regression from the URL->string conversion
change.


New in 0.4.5
------------
Converting URLs to Nodes is now done in ToNode,
so URL objects can be used everywhere.

Fixed a few bugs in Text._strtext and URLAttr._str.


New in 0.4.4
------------
Now testing if characters can be encoded with the
specified encoding is done directy. This means, that
escaping unencodable characters now works even with
exotic encodings (tested with JapaneseCodecs-1.0.1.tar.gz).

The URLAttr constructor now can handle a single parameter
of the type URL.

The URL to string conversion function have changed:
URL.asString() returns the URL with path markers,
URL.asPlainString() returns the URL without path markers.

Added the i18n attribute to the font element.

Fixed the clashes between the class names for the elements
and entities sub and sup in html.py.

Several small enhancements and bug fixes contributed by
Hartmut Goebel.


New in 0.4.3
------------
Now processing instruction classes are registered in the
same way as elements and entities are.

The leaf nodes (Text, Comment, ProcInst) are now considered
immutable. This means that their asHTML method can simply
return self, because now those nodes can be shared between
trees. Functionality for manipulation the objects is provided
by a mixin class very similar to UserString. All this results
in a speedup of about 10% for the python-quotes example.

Small optimizations in the asHTML methods of Element and
Frag optimize away many calls to append, extend and ToNode
and result in a speedup of about 30% for the python-quotes
example. One consequence of this is that Null objects will
no longer be ignored.


New in 0.4.2
------------
New elements keywords and descrition in meta.py, that can be
used from.

Fixed a bug in Namespace.register, now setting name=None to
prevent an element from being registered works again.


New in 0.4.1
------------
A new module named meta has been created, that simplifies
generating meta tags.

Various small bugfixes.


New in 0.4
----------
XIST now requires at least Python 2.0b1.

A new bugfixed version of the sgmlop source is available
from the FTP site.

XIST now completely supports Unicode. For output any
encoding known to Python can be used, so now you
can output your HTML in ascii, latin1, utf8, utf16, ...

All publishers have been updated to support Unicode.
The publishing interface has been streamlined (encoding
and XHTML parameters are now attributes of the publisher)

asString() will now always return a Unicode string. If you
want a byte string use asBytes() instead, where the encoding
can be specified as an argument.

There an additional publisher class FilePublisher, which can
be used for publishing to a file (or anything else that has
a write and a writelines method, and is supported by the stream
writer available through codecs.lookup).

Element and attribute names are no longer converted to lowercase.
If you have an attribute name which clashes with a Python
keyword (e.g. "class") append an underscore (_), which will be
removed before accessing the attribute. This is the "official"
Python method for handling these cases.

Elements and entities are no longer registered one by one. Now
you can build Namespace objects which are used for searching
and there are pushNamespace and popNamespace functions in XSC.xsc.
For more info, see the source.

Image size calculation has been removed from html.img and html.input.
Use specials.autoimg and specials.autoinput for that.

{Frag,Element}.__{set,get,del}item__ now accepts a list as an argument.
The method will be applied recursively, i.e. e[[0, 1, "foo", 2] is the
same as e[0][1]["foo"][2].

The deprecated module db no longer exists. Useful functions and elements
from db have been moved to sql.py and form.py respectively.

When using xsc.make() the encoding and XHTML parameters to use can now
be specified on the command line (e.g. --encoding utf-8 --xhtml 2)

Handling of multiline <?xsc-eval?> and <?xsc-exec?> has been enhanced,
although, XIST will not be able to guess the correct indentation in all
cases. As a workarround simply add a Python comment to the beginning:
<?xsc-exec
	for i in xrange(10):
		do(i)
?>
won't work
<?xsc-exec
	#
	for i in xrange(10):
		do(i)
?>
will.

Make functionality has been moved to make.py, as certain modules can't
be used as the main script, because reimporting them in processing
instructions won't work. Now you can simply call
python make.py --import xist.html --import project.main foo.xsc

There is a new module cond, that contains elements that can be used for conditionals:
<?xsc-exec a=42?>
<if cond="a==21">
	<b>foo</b>
<elif cond="a==42"/>
	<i>bar</i>
<else/>
	baz
</if>


New in 0.3.9
------------
sgmlop will now be found either via
	import sgmlop
or via
	from xml.parsers import sgmlop


New in 0.3.8
------------
Fixed a bug in URLAttr.publish, which prevented URLAttr from working
at all.


New in 0.3.7
------------
Fixed a bug in html.img and html.input. Now image size calculation works
again.


New in 0.3.6
------------
Fixed a bug in Node._matches, which resulted in a non working
find().


New in 0.3.5
------------
The documentation example has been enhanced. Now documenting methods works.

When the member "elementname" in the element class is set before calling
registerElement(), this element name will be used for the element. This
allows custom name even when using registerAllElements().

Comparison of scheme and server in URLs is done case insensitive (as RFC 2068
requires.)

Image size calculation is now done in asString() and not in asHTML(). This allows
to write faster code:
	Old method: e = html.div(html.img(...),gurk.hurz()).asHTML().asString()
	New method: e = html.div(html.img(...),gurk.hurz().asHTML()).asString()

Image size calculation is now done for <input type="image">. The "size" attribute
is set to the image width.

Manipulating the path in an URL is now done via the usual __setitem__/__getitem__ stuff,
which keeps the path in a consistent state.
>>> from xist.URL import URL
>>> u = URL("/foo/*/../bar/baz.gif")
>>> del u[1]
>>> u
URL(scheme='server', path=['bar'], file='baz', ext='gif')

findNodes() (which has been shortened to find()) has an additional argument test, which can
be a test function that will be called when the node passes all other tests.

asString() no longer generates a string directly, but uses the new method publish, which
has an additional argument publisher, to which the strings to be output are passed.


New in 0.3.4
------------
Location information is now copied over in clone(), asHTML() and compact() where appropriate,
so you know even in the HTML tree, where something came from.

xsc.repransi can now have three values:
	0 coloring is off
	1 coloring is on for a dark background
	2 coloring is on for a light background
All repransi* variables are now arrays with two strings, the first for dark, the second for
light.


New in 0.3.3
------------
The workaround for the trailing cdata bug in sgmlop has been removed, so now you'll need
a newer version of sgmlop (included in PyXML 0.5.5.1)

